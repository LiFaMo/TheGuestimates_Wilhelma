# general rules

rule hello(): "(\\b|^|\\ )(hi|hello|howdy|hey)\\b"
rule bye(): "(\\b|^|\\ )(bye(-)?(bye)?|good(-)?bye|that'?s?\\ (is\\ )*all)(\\s|$|\\ |\\.)"
rule deny(): "((\\b|^|\\ )(n(o)?|wrong|incorrect|error|nope)|(not\\ (true|correct|right)))(\\s)?$"
rule affirm(): "((yes|yeah|(\\b|^)ok\\b|(\\b|^)OK|okay|sure|^y$|(\\b|^)yep(\\b|$)|(that('?s| is) )?(?<!not\\ )(?<!no\\ )(right|correct|confirm)))(\\s)?$"
rule thanks(): "(?=.*(^(\\ )*)(((great|good|awesome|nice|cool)\\ )?((that((')?s|\\ (is|was))\\ (very\\ )?helpful)\\ )?(thank|thank(s|\\ you)(\\ (very|so)\\ much)?)(\\ (that((')?s|\\ (is|was))\\ (very\\ )?helpful))?|((great|good|awesome|nice|cool)\\ )?(that((')?s|\\ (is|was))\\ (very\\ )?helpful)|(great|good|awesome|nice|cool))((\\ )*))(?=^(?:(?!bye).)*$).*$"
rule repeat(): "(\\b|^|\\ )(repeat((\\ that )|(\\ it))?)|(say((\\ that )|(\\ it))\\ again)|(again)"
rule reqalts(): "(\\b|^|\\ )((something|anything)\\ else)|(different(\\ one)*)|(another\\ one)|(alternatives*)|(other options*)|((don'*t|do not) (want|like)\\ (that|this)(\\ one)*)"
rule ack(): "{IMPOSSIBLEREGEX()}"
rule bad(): "{IMPOSSIBLEREGEX()}"

# user informable slots are name, latin_name, primary_fur_color, weight, 
# continent_of_origin, habitat, expected_age, gestation_period, 
# estimated_population, degree_of_endangering, specialities, 
# social_structure, location_Wilhelma, opening_hours, sponsorship
# feeding_time
	
rule inform(name)
    "{rINFORM()} {synonyms("name", name)}"
    "{synonyms("name", name)}{WBG()}"
    "(\\ |^){synonyms("name", name)}(\\ (please|and))*"	
	
rule inform(latin_name)
    "{rINFORM()} {synonyms("latin_name", latin_name)}"
    "{synonyms("latin_name", latin_name)}{WBG()}"
    "(\\ |^){synonyms("latin_name", latin_name)}(\\ (please|and))*"

rule inform(primary_fur_color)
    "{rINFORM()} {synonyms("primary_fur_color", primary_fur_color)}"
    "{synonyms("primary_fur_color", primary_fur_color)}{WBG()}"
    "(\\ |^){synonyms("primary_fur_color", primary_fur_color)}(\\ (please|and))*"

rule inform(weight)
    "{rINFORM()} {synonyms("weight", weight)}"
    "{synonyms("weight", weight)}{WBG()}"
    "(\\ |^){synonyms("weight", weight)}(\\ (please|and))*"

rule inform(continent_of_origin)
    "{rINFORM()} {synonyms("continent_of_origin", continent_of_origin)}"
    "{synonyms("continent_of_origin", continent_of_origin)}{WBG()}"
    "(\\ |^){synonyms("continent_of_origin", continent_of_origin)}(\\ (please|and))*"
	
rule inform(habitat)
    "{rINFORM()} {synonyms("habitat", habitat)}"
    "{synonyms("habitat", habitat)}{WBG()}"
    "(\\ |^){synonyms("habitat", habitat)}(\\ (please|and))*"
	
rule inform(expected_age)
    "{rINFORM()} {synonyms("expected_age", expected_age)}"
    "{synonyms("expected_age", expected_age)}{WBG()}"
    "(\\ |^){synonyms("expected_age", expected_age)}(\\ (please|and))*"

rule inform(gestation_period)
    "{rINFORM()} {synonyms("gestation_period", gestation_period)}"
    "{synonyms("gestation_period", gestation_period)}{WBG()}"
    "(\\ |^){synonyms("gestation_period", gestation_period)}(\\ (please|and))*"

rule inform(estimated_population)
    "{rINFORM()} {synonyms("estimated_population", estimated_population)}"
    "{synonyms("estimated_population", estimated_population)}{WBG()}"
    "(\\ |^){synonyms("estimated_population", estimated_population)}(\\ (please|and))*"

rule inform(degree_of_endangering)
    "{rINFORM()} {synonyms("degree_of_endangering", degree_of_endangering)}"
    "{synonyms("degree_of_endangering", degree_of_endangering)}{WBG()}"
    "(\\ |^){synonyms("degree_of_endangering", degree_of_endangering)}(\\ (please|and))*"

rule inform(social_structure)
    "{rINFORM()} {synonyms("social_structure", social_structure)}"
    "{synonyms("social_structure", social_structure)}{WBG()}"
    "(\\ |^){synonyms("social_structure", social_structure)}(\\ (please|and))*"

rule inform(specialities)
    "{rINFORM()} {synonyms("specialities", specialities)}"
    "{synonyms("specialities", specialities)}{WBG()}"
    "(\\ |^){synonyms("specialities", specialities)}(\\ (please|and))*"

rule inform(location_Wilhelma)
    "{rINFORM()} {synonyms("location_Wilhelma", location_Wilhelma)}"
    "{synonyms("location_Wilhelma", location_Wilhelma)}{WBG()}"
    "(\\ |^){synonyms("location_Wilhelma", location_Wilhelma)}(\\ (please|and))*"	

rule inform(sponsorship)
    "{rINFORM()} {synonyms("sponsorship", sponsorship)}"
    "{synonyms("sponsorship", sponsorship)}{WBG()}"
    "(\\ |^){synonyms("sponsorship", sponsorship)}(\\ (please|and))*"	

rule inform(feeding_time)
    "{rINFORM()} {synonyms("feeding_time", feeding_time)}"
    "{synonyms("feeding_time", feeding_time)}{WBG()}"
    "(\\ |^){synonyms("feeding_time", feeding_time)}(\\ (please|and))*"	

# All slots are requestable


rule request(name)
    "{rREQUEST()} {slot_synonyms("name")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("name")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("name")}"
    "{WANT()}.*{slot_synonyms("name")}"
    "(the )?{slot_synonyms("name")}"
    "who .*{slot_synonyms("name")}"

rule request(latin_name)
    "{rREQUEST()} {slot_synonyms("latin_name")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("latin_name")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("latin_name")}"
    "{WANT()}.*{slot_synonyms("latin_name")}"
    "(the )?{slot_synonyms("latin_name")}"

rule request(primary_fur_color)
    "{rREQUEST()} {slot_synonyms("primary_fur_color")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("primary_fur_color")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("primary_fur_color")}"
    "{WANT()}.*{slot_synonyms("primary_fur_color")}"
    "(the )?{slot_synonyms("primary_fur_color")}"
    "who .*{slot_synonyms("primary_fur_color")}"

rule request(continent_of_origin)
    "{rREQUEST()} {slot_synonyms("continent_of_origin")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("continent_of_origin")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("continent_of_origin")}"
    "{WANT()}.*{slot_synonyms("continent_of_origin")}"
    "(the )?{slot_synonyms("continent_of_origin")}"
    "who .*{slot_synonyms("continent_of_origin")}"

rule request(habitat)
    "{rREQUEST()} {slot_synonyms("habitat")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("habitat")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("habitat")}"
    "{WANT()}.*{slot_synonyms("habitat")}"
    "(the )?{slot_synonyms("habitat")}"
    "who .*{slot_synonyms("habitat")}"

rule request(degree_of_endangering)
    "{rREQUEST()} {slot_synonyms("degree_of_endangering")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("degree_of_endangering")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("degree_of_endangering")}"
    "{WANT()}.*{slot_synonyms("degree_of_endangering")}"
    "(the )?{slot_synonyms("degree_of_endangering")}"
    "who .*{slot_synonyms("degree_of_endangering")}"

rule request(social_structure)
    "{rREQUEST()} {slot_synonyms("social_structure")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("social_structure")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("social_structure")}"
    "{WANT()}.*{slot_synonyms("social_structure")}"
    "(the )?{slot_synonyms("social_structure")}"
    "who .*{slot_synonyms("social_structure")}"
	
rule request(location_Wilhelma)
    "{rREQUEST()} {slot_synonyms("location_Wilhelma")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("location_Wilhelma")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("location_Wilhelma")}"
    "{WANT()}.*{slot_synonyms("location_Wilhelma")}"
    "(the )?{slot_synonyms("location_Wilhelma")}"
    "who .*{slot_synonyms("location_Wilhelma")}"
	
rule request(feeding_time)
    "{rREQUEST()} {slot_synonyms("feeding_time")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("feeding_time")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("feeding_time")}"
    "{WANT()}.*{slot_synonyms("feeding_time")}"
    "(the )?{slot_synonyms("feeding_time")}"
    "who .*{slot_synonyms("feeding_time")}"
	
rule request(sponsorship)
    "{rREQUEST()} {slot_synonyms("sponsorship")}"
    "(?<!{DONTCAREWHAT()})(?<!want ){IT()} {slot_synonyms("sponsorship")}"
    "(?<!{DONTCARE()}){WHAT()} {slot_synonyms("sponsorship")}"
    "{WANT()}.*{slot_synonyms("sponsorship")}"
    "(the )?{slot_synonyms("sponsorship")}"
    "who .*{slot_synonyms("sponsorship")}"
# synonyms

function synonyms(slot, value)
    "{value}"

    add_if slot = "name"
        if value = "southern tamandua"
            "tamandua(s)?"
        if value = "two toed sloth"
			"sloth(s)?"
        if value = "black howler"
            "howler(s)?"
            "howler monkey"
        if value = "green anaconda"
            "anaconda(s)?"
            "green snake(s)?"
        if value = "crocodile"
            "crocodile(s)?"
            "alligator(s)?"
			"caiman(s)?"
        if value = "california sea lion"
            "sea lion(s)?"
        if value = "common octopus"
            "octopus"
			"devilfish"
			"cephalopod"
			"mollusk"
		if value = "cheetah"
			"cheetah(s)?"
        if value = "grevy zebra"  
            "zebra(s)?"
        if value = "okapi"  
            "okapia"
			"okapi(s)?"
        if value = "reticulated giraffe"  
            "giraffe(s)?"
        if value = "megabat"  
			"megabat(s)?"
            "fruit bat(s)?"
			"flying fox"
        if value = "bonobo" 
			"bonobo(s)?"
            "chimpanzee(s)?"
        if value = "squirrel monkey"  
            "monkey"
        if value = "java sparrow" 
			"sparrow(s)?"
            "java finch"
			"rice bird(s)?"
        if value = "bali myna"  
            "rothschild's mynah"
			"bali starling"
			"bali mynah"
			"jalak bali"
        if value = "greek tortoise"  
			"tortoise(s)?"
            "spur\-thighed tortoise(s)?"
        if value = "asian lion"  
            "lion(s)?"
        if value = "asian elefant"  
            "elephant(s)?"
			"elefant(s)?"
        if value = "african penguin"  
			"penguin(s)?"
            "cape penguin(s)?"
        if value = "western lowland gorilla"  
            "gorilla(s)?"		

    add_if slot = "latin_name"
        if value = "tamandua tetradactyla straminea"
            "tamandua"
            "tetradactyla"
			"straminea"
        if value = "choloepus didactylus"
            "choloepus"
			"didactylus"
        if value = "alouatta caraya"
            "alouatta"
			"caraya"
        if value = "eunectes murinus"
            "eunectes"
            "murinus"
        if value = "crocodylus porosus"
            "crocodylus"
            "porosus"
        if value = "zalophus californianus"
            "zalophus"
			"californianus"
        if value = "octopus vulgaris"
            "octopus"
			"vulgaris"
        if value = "acinonyx jubatus"
            "acinonyx"
			"jubatus"
        if value = "equus grevyi"
            "equus"
			"grevyi"
		if value = "okapia johnstoni"
            "okapia"
			"johnstoni"
		if value = "giraffa camelopardalis reticulata"
            "giraffa"
			"camelopardalis"
			"reticulata"
		if value = "pteropus spec."
            "pteropus"
		if value = "pan paniscus"
            "pan"
			"paniscus"
		if value = "saimiri boliviensis"
            "saimiri"
			"boliviensis"
		if value = "lonchura oryzivora"
            "lonchura"
			"oryzivora"
		if value = "leucopsar rothschildi"
            "leucopsar"
			"rothschildi"
		if value = "testudo hermanni"
            "testudo"
			"Hermanni"
		if value = "panthera leo persica"
            "panthera"
			"leo"
			"persica"
		if value = "elephas maximus"
            "elephas"
			"maximus"
		if value = "spheniscus demersus"
            "spheniscus"
			"demersus"
		if value = "gorilla gorilla gorilla"
            "gorilla"

    add_if slot = "primary_fur_color"
        if value = "black"
            "dark"
			"blackish"
        if value = "yellow"
			"yellowish"
            "lemon"
			"gold"
        if value = "brown"
			"brownish"
            "brunette"
        if value = "green\-brown"
            "greenish"
        if value = "green"
            "leafy"
        if value = "gray"
            "grey"
        if value = "light brown"
            "caramel"
        if value = "black and white"
            "black\-white"
        if value = "dark brown"
            "chocolate"
        if value = "white"
            "light"
			"colo(u)?rless "
			"milky"
        if value = "fawn"
            "beige"
			
	add_if slot = "weight"
		if value = "None"
			"nothing"
			"unknown"
		if value = "3.5 - 7 kg"
			"3(,|.)5 (to|-) 7 (kg|kilo(s)?)"
		if value = "3.3 - 9 kg"
			"3(,|.)3 (to|-) 9 kg (kg|kilo(s)?)"		
		if value = "4.4 - 6.7 kg"
			"4(,|.)4 (to|-) 6(.|,)7 (kg|kilo(s)?)"
		if value = "2.5 - 82.5 kg"
			"2(,|.)5 (to|-) 82(.|,)5 (kg|kilo(s)?)"
		if value = "240 kg"
			"240 (kg|kilo(s)?)"
		if value = "up to 400 kg"
			"400 (kg|kilo(s)?)"
		if value = "21 - 72 kg"
			"21 (to|-) 72 (kg|kilo(s)?)"
		if value = "350 - 450 kg"
			"350 (to|-) 450 (kg|kilo(s)?)"
		if value = "200 - 350 kg"
			"200 (to|-) 350 (kg|kilo(s)?)"
		if value = "1200 - 1900 kg"
			"1200 (to|-) 1900 (kg|kilo(s)?)"
		if value = "15g - 1.3 kg"
		if value = "27 - 61 kg"
			"27 (to|-) 61 (kg|kilo(s)?)"
		if value = "700 - 900 g"		
			"700 (to|-) 900 g(ramm)?"
		if value = "25 g"
			"25 g(ramm)?"
		if value = "90 g"
			"90 g(ramm)?"
		if value = "950 - 1100 g"
			"950 (to|-) (1100 g|1100 (kg|kilo(s)?))"
		if value = "110 - 190 kg"
			"110 (to|-) 190 (kg|kilo(s)?)"
		if value = "2720 - 6000 kg"
			"2720 (to|-) 6000 (kg|kilo(s)?)"
		if value = "2.5 - 3 kg"
			"2(,|.)5 (to|-) 3 (kg|kilo(s)?)"
		if value = "270 kg"
			"270 (kg|kilo(s)?)"

    add_if slot = "continent_of_origin"
        if value = "south america"
            "southern america"
        if value = "north america"
            "northern america"
        if value = "worldwide"
            "world"
        if value = "africa"
            "african"
        if value = "asia"
            "asian"
        if value = "australia"
            "australian"
		if value = "europe"
            "european"
			
	add_if slot = "habitat"
        if value = "tropical forest(s)?"
            "tropical"
			"tropic forest(s)?"
        if value = "coastal forest(s)?"
            "coast forest(s)?"
			"forest(s)? at coast(s)?"
        if value = "savanna(h)?"
            "savanna(h)?(s)?"
        if value = "rain forest(s)?"
            "rainforest(s)?"
        if value = "seasonal dry forest(s)?"
            "dry forest(s)?"
        if value = "near lake(s)?"
            "close (to)? lake(s)?"
		if value = "near river(s)?"
            "close (to)? river(s)?"
		if value = "near swamp(s)?"
            "close (to)? swamp(s)?"
			"swamp(s)?"
		if value = "coastal river(s)?"
            "coast river(s)?"
			"river(s)? at coast(s)?"
		if value = "coastal swamp(s)?"
            "coast swamp(s)?"
			"swamp(s)? at coast(s)?"
		if value = "open sea"
            "sea"
		if value = "sandy, rocky coast(s)?"
            "sand(y)? coast(s)?"
			"rock(y)? coast(s)?"   
		if value = "seagrass meadow(s)?"
            "sea grass meadow(s)?"
		if value = "rocky ground(s)?"
            "rock ground(s)?"
		if value = "open grass"
            "grass (land)?"
		if value = "bush savanna(h)?"
            "bush"
		if value = "dry savanna(h)?"
            "dry ground(s)?"
		if value = "primary rain forest(s)?"
            "primary rainforest(s)?"
		if value = "secundary rain forest(s)?"
            "secundary rainforest(s)?"
		if value = "cultivated land(s)?"
            "cultivated area(s)?"
		if value = "sparse forest(s)?"
            "barren forest(s)?"
		if value = "plantation"
            "plantations"
		if value = "sunny landscape(s)?"
            "sun landscape(s)?"
		if value = "dry teak(s)?"
            "teak(s)?"
		if value = "acacia forest(s)?"
            "acacia"
		if value = "grass landscape(s)?"
            "grassland(s)?"
		if value = "coast(s)?"
            "coastline(s)?"
		if value = "mountain forest(s)?"
            "rocky forest(s)?"	
	
	add_if slot = "expected_age"
		if value = "9 years"
			"(nine|9) y(ears)?"
		if value = "40 years"
			"(fourty|40) y(ears)?"
		if value = "None"
			"nothing"
			"unknown"
		if value = "70 years"
			"(seventy|70) y(ears)?"
		if value = "2 years"
			"(two|2) y(ears)?"
		if value = "3 years"
			"(three|3) y(ears)?"
		if value = "8 years"
			"(eight|8) y(ears)?"
		if value = "15 years"
			"(fifteen|15) y(ears)?"
		if value = "30 years"
			"(thirty|30) y(ears)?"
		if value = "5 years"
			"(five|5) y(ears)?"
		if value = "10 years"
			"(ten|10) y(ears)?"
		if value = "22 years"
			"(trenty-two|22) y(ears)?"
		if value = "80 years"
			"(eighty|80) y(ears)?"
		if value = "49 years"
			"(fourty-nine|49) y(ears)?"
		if value = "18 years"
			"(eighteen|18) y(ears)?"
		if value = "20 years"
			"(twenty|20) y(ears)?"
		if value = "35 years"
			"(thirty-five|35) y(ears)?"
	
	add_if slot = "gestation_period"
		if value = "130 - 180 days"
			"130 (to|-) 180 day(s)?"
			"130 (to|-) 6 month(s)?"
		if value = "180 days"
			"180 day(s)?"
			"6 month(s)?"
		if value = "187 days"
			"187 day(s)?"
		if value = "8 - 9 months" 
			"8 (to|-) 9 month(s)?"
		if value = "3 months of breeding"
			"3 month(s)? (of)? breeding (time)?"
		if value = "11 - 12 months"
			"11 (to|-) (12 month(s)?|(one|1|a) y(ear)?)"
		if value = "25 - 65 days of breeding"
			"25 (to|-) 65 day(s)? (of)? breeding (time)?"
		if value = "95 days"
			"95 day(s)?"
		if value = "390 days"
			"390 day(s)?"
		if value = "14 - 15 months"
			"14 (to|-) 15 month(s)?"
		if value = "150 days"
			"150 day(s)?"
			"5 month(s)?"
		if value = "8 months"
			"8 month(s)?"
		if value = "160 days"
			"160 day(s)?"
		if value = "13 - 14 days"
			"13 (to|-) 14 day(s)?"
		if value = "90 days"
			"90 day(s)?"
			"3 month(s)?"
		if value = "100 - 110 days"
			"100 (to|-) 110 day(s)?"
		if value = "21 - 22 months"
			"21 (to|-) 22 month(s)?"
		if value = "40 days"
			"40 day(s)?"
		if value = "234 - 289 days"
			"234 (to|-) 289 day(s)?"
	
	add_if slot = "estimated_population"
        if value = "none"
            "nothing"
			"unknown"
        if value = "160000"
            "160,000"
			"160.000"
        if value = "7500"
            "7,500"
			"7.500"
        if value = "2000"
            "2,000"
			"2.000"
        if value = "10000"
            "10,000"
			"10.000"
		if value = "20000"
            "20,000"
			"20.000"
		if value = "30000"
            "30,000"
			"30.000"
		if value = "40000"
            "40,000"
			"40.000"
		if value = "50000"
            "50,000"
			"50.000"
		if value = "90000"
            "90,000"
			"90.000"
		if value = "29500"
            "29,500"
			"29.500"
        if value = "500"
            "500"
		if value = "37"
            "37"
			
	add_if slot = "degree_of_endangering"
        if value = "not endangered"
            "good population"
			"no endangering"
        if value = "potentially endangered"
			"potential endangered"
            "potential endangering"
        if value = "endangered"
            "endangering"
        if value = "strongly endangered"
            "strong endangered"
			"strong endangering"
        if value = "stable"
            "constant"
        if value = "critically endangered"
            "critical endangered"
			"critical endangering"
		if value = "endangered by extinction"
			"endangered for extinction"
			"almost extinct"
			
	add_if slot = "social_structure"
        if value = "loner"
            "alone"
        if value = "couples"
            "pairs"
        if value = "colonies"
            "colony"
        if value = "herd animal"
            "herds"
        if value = "groups during mating time"
            "sometimes groups"
        if value = "changing associations"
            "changing"
			"association(s)?"
		if value = "small group(s)?"
            "little group(s)?"
		if value = "large group(s)?"
            "huge group(s)?"
		if value = "sociable"
            "social"
		if value = "families"
            "family"
		if value = "harems"
            "harem"
			
	add_if slot = "specialities"
		if value = "40 cm tongue"
			"tongue 40 cm"
		if value = "slowest mammal"
			"slowest (animal|mammal)"
		if value = "can swim very well"
			"very well swimmer"
		if value = "biggest reptile alive"
			"biggest reptile"
		if value = "can dive up to 100 meters and for 15 minutes"
			"can dive up to (a|one) hundred meters and for 15 minutes"
		if value = "males: black females: blond, howlsong, prehensile ale"
			"male(s)?: black (fur)? females: "
		if value = "to protect itself from predators, it secretes an oily, dark ink"
			"protection by secreting an oily, dark ink"
		if value = "fastest land mammal"
			"fastest (animal|mammal) (on|at) land"
		if value = "largest zebra species"
			"largest zebra"
		if value = "only discovered at the beginning of the 20th century"
			"discovered only at the beginning of the 20th century"
		if value = "extremely elongated cervical vertebrae, prehensile tongue"
			"elongated cervical vertebrae, prehensile tongue"
		if value = "Females are the dominant sex. Sex serves to reduce social tensions"
			"females are the dominant sex and sex serves to reduce social tensions"
		if value = "none"
			"nothing" 
			"unknown"
		if value = "Largest species of finches"
			"largest finch species"
		if value = "extended spring hood at the back of the head"
			"at the back of the head there is an extended spring hood"
		if value = "largest land mammal"
			"largest (animal|mammal) (on|at) land"
		if value = "the only penguin at the coasts of south africa"
			"only penguin species at the coasts of south africa"
		if value = "adult males also called silverback due to their silver gray back saddle"
			"adult males are also called silverback due to their silver gray back saddle"
	
	add_if slot = "location_Wilhelma"
        if value = "amazonia"
            "amazonas"
        if value = "aquarium and terrarium"
            "aquarium"
			"terrarium"
        if value = "africa"
            "african"
        if value = "insectarium"
            "insect(s)?"
        if value = "great ape house"
            "ape(s)?"
        if value = "moorish garden and moorish country house"
            "moorish"
			"garden"
			"century house"
		if value = "historic greenhouse row"
            "historical"
			"greenhouse"
		if value = "world of birds"
            "bird(s)?"
	
	add_if slot = "feeding_time"
        if value = "may to september daily 10:15 (o'clock)?"
            "(daily)? 10:15 (o'clock)?"
        if value = "daily except for thursday 11:00 (o'clock)? and 15:00 (o'clock)?"
            "(daily)? 11:00 (o'clock)?"
			"(daily)? 15:00 (o'clock)?"
        if value = "may to september daily 13:15 (o'clock)?"
            "(daily)? 13:15 (o'clock)?"
        if value = "monday 14:00 (o'clock)?"
            "14:00 (o'clock)?"
        if value = "daily 14:30 (o'clock)?"
            "14:30 (o'clock)?"
	
	add_if slot = "sponsorship"
        if value = "100 (€|euro)?"
            "(one|a)? hundred (€|euro)"
        if value = "150 (€|euro)?"
            "(one|a)? hundred (and)? fifty (€|euro)?"
        if value = "200 (€|euro)?"
            "two hundred (€|euro)"
        if value = "300 (€|euro)?"
            "three hundred (€|euro)"
        if value = "750 (€|euro)?"
            "seven hundred (and)? fifty (€|euro)?"
        if value = "1000 (€|euro)?"
            "(one|a)? thousand (€|euro)"
        if value = "2500 (€|euro)?"
            "two thousand (and)? five hundred (€|euro)?"
        if value = "3000 (€|euro)?"
            "three thousand (€|euro)"
        if value = "4000 (€|euro)?"
            "four thousand (€|euro)"
		if value = "5000 (€|euro)?"
            "five thousand (€|euro)"

function slot_synonyms(slot)
    "{IMPOSSIBLEREGEX()}"

    if slot = "name"
        "name"
        "{domain_vocab()}('s)? name"
        "name of the {domain_vocab()}"
	if slot = "latin_name"
        "latin name"
        "{domain_vocab()}('s)? latin name"
        "latin name of the {domain_vocab()}"
    if slot = "primary_fur_color"
        "primary"
        "colo(u)?r"
        "{domain_vocab()}('s)? colo(u)?r"
        "the colo(u)?r of the {domain_vocab()}"
        "{domain_vocab()}('s)? primary colo(u)?r"
        "the primary colo(u)?r of the {domain_vocab()}"
        "{domain_vocab()}('s)? fur colo(u)?r"
        "fur colo(u)?r of the {domain_vocab()}"
    if slot = "continent_of_origin"
        "continent"
        "origin"
        "{domain_vocab()}('s)? continent"
        "continent of the {domain_vocab()}"
        "{domain_vocab()}('s)? continent of origin"
        "continent of origin of the {domain_vocab()}"
        "{domain_vocab()}('s)? origin"
        "origin of the {domain_vocab()}"
        "where does the the {domain_vocab()} come from"
    if slot = "habitat"
        "habitat"
        "home"
		"natural home"
		"environment"
		"territory"
        "{domain_vocab()}('s)? habitat"
        "habitat of the {domain_vocab()}"
        "{domain_vocab()}('s)? home"
        "home of the {domain_vocab()}"
		"{domain_vocab()}('s)? natural home"
        "natural home of the {domain_vocab()}"
		"{domain_vocab()}('s)? environment"
        "environment of the {domain_vocab()}"
		"{domain_vocab()}('s)? territory"
        "territory of the {domain_vocab()}"
    if slot = "estimated_population"
        "estimated population"
		"current population"
		"population"
        "{domain_vocab()}('s)? estimated population"
        "estimated population of the {domain_vocab()}"
		"{domain_vocab()}('s)? current population"
        "current population of the {domain_vocab()}"
		"{domain_vocab()}('s)? population"
        "population of the {domain_vocab()}"
	if slot = "degree_of_endangering"
        "endangering"
		"degree of endangering"
		"extinction"
		"degree of extinction"
        "{domain_vocab()}('s)? endangering"
        "endangering of the {domain_vocab()}"
		"{domain_vocab()}('s)? degree of endangering"
        "degree of endangering of the {domain_vocab()}"
		"{domain_vocab()}('s)? extinction"
        "extinction of the {domain_vocab()}"
		"{domain_vocab()}('s)? degree of extinction"
        "degree of extinction of the {domain_vocab()}"
		"how many {domain_vocab()}(s)? exist today"
	if slot = "social_structure"
        "social structure"
		"social life"
		"social habitat"
        "{domain_vocab()}('s)? social structure"
        "social structure of the {domain_vocab()}"
		"{domain_vocab()}('s)? social life"
        "social life of the {domain_vocab()}"
		"{domain_vocab()}('s)? social habitat"
        "social habitat of the {domain_vocab()}"
		"how does {domain_vocab()} lives"
		"how do {domain_vocab()}(s)? live"
	if slot = "location_Wilhelma"
        "location in wilhelma"
		"location at wilhelma"
		"located in wilhelma"
		"special"
        "{domain_vocab()}('s)? location in wilhelma"
        "location in wilhelma of the {domain_vocab()}"
		"{domain_vocab()}('s)? location at wilhelma"
        "location at wilhelma of the {domain_vocab()}"
		"where are (the)? {domain_vocab()}(s)? located in wilhelma"
		"where are (the)? {domain_vocab()}(s)? located at wilhelma"
        "where is (the)? {domain_vocab()} located in wilhelma"
		"where is (the)? {domain_vocab()} located at wilhelma"
	if slot = "opening_hours"
        "opening hours"
		"visit time"
		"visiting time"
		"open"
        "{domain_vocab()}('s)? opening hours"
        "opening hours of the {domain_vocab()}"
		"{domain_vocab()}('s)? visit time"
        "visit time of the {domain_vocab()}"
		"{domain_vocab()}('s)? visiting time"
        "visiting time of the {domain_vocab()}"
		"when does (the)? {domain_vocab()} open"
	if slot = "feeding_time"
        "feeding time"
		"feed"
		"fed"
		"food"
        "{domain_vocab()}('s)? feeding time"
        "feeding time of the {domain_vocab()}"
		"when will (the)? {domain_vocab()}(s)? be fed"
        "when will they feed (the)? {domain_vocab()}(s)"
		"when will (the)? {domain_vocab()}(s)? get food"
	if slot = "sponsorship"
        "sponsorship"
		"money"
		"price"
        "{domain_vocab()}('s)? sponsorship"
        "sponsorship of the {domain_vocab()}"
        "money for (the)? {domain_vocab()}(S)?"

# constants

function domain_vocab(): "(lecturer|teacher)"
function IMPOSSIBLEREGEX(): "^\b$"
function WHAT(): "(what(\\')?(s)?|which|does|where)(\\ (its|the))*"
function IT(): "(it\\'*s*|it\\ have|is\\ it\\'*s*|is\\ (the|their))(\\ for)*"
function CYTM(): "(can\\ you\\ tell\\ me\\ (the|it\\'*s|their))"
function CIG(): "(can\\ I\\ get\\ (the|it\\'*s|their))"
function NEGATE(): "((i\\ )*(don\\'?t|do\\ not|does\\ not|does\\'?nt)\\ (care|mind|matter)(\\ (about|what))*(\\ (the|it\\'?s*))*)"
# Cant create variable lengths with negative lookback... else merge following:
function DONTCARE(): "(i\\ dont\\ care)"
function DONTCAREWHAT(): "(i\\ dont\\ care\\ what\\ )"
function DONTCAREABOUT(): "(i\\ dont\\ care\\ about\\ )"
function rREQUEST(): "(\\\\b|^|\\ )(?<!{DONTCARE()})({WHAT()}\\ {IT()}|{CYTM()}|{CIG()})"
function WANT(): "(what\\ about|want|have|need|looking\\ for|used\\ for)(\\ a(n)?)*"
function WBG(): "(\\ ((would|seems\\ to)\\ be\\ (good|nice)($|[^\\?]$)|seems\\ (good|nice)($|[^\\?]$)))"
function rINFORM(): "(\\\\b|^|\\ ){WANT()}"
function rINFORM_DONTCARE(): "{DONTCARE()} ((what|which|about)(\\ (it\\'*s*|the))*)+"
function rINFORM_DONTWANT(): "(((i\\ )*(don\\'*t\\ want))|it\\ (shouldn\\'*t|should\\ not)\\ (have|be))+"
# Contextual dontcares: i.e things that should be labelled inform(=dontcare)
function rCONTEXTUAL_DONTCARE(): "(anything(?!\\ else)|((any$|any\\ kind)|(i\\ )*(don\\'?t|do\\ not)\\ (care|know))($|(?!\\ (a?bout|of|what))|(\\ (a?bout|of|what)\\ (type|kind)(?!\\ of))|\\ a?bout\\ (that|this))|(any(thing)?\\ (is\\ )*(fine|ok\\\\b|okay|will\\ do))($|\\ and|\\ but)|(it )?(doesn\\'?t|does not) matter)+"